{"version":3,"file":"js/313.7930f349.js","mappings":"uSAwBA,MAAMA,GAAUC,EAAAA,EAAAA,IAAS,CACrBC,IAAM,EACNC,QAAU,eAGRC,GAAcC,EAAAA,EAAAA,KAAS,IAAM,GAAGL,EAAQG,WAAWH,EAAQE,QAE3DI,EAAYA,KACdN,EAAQE,KAAK,EAcXK,GAAWC,EAAAA,EAAAA,KAAI,GACfC,GAAQD,EAAAA,EAAAA,IAAI,MAEZE,GAAcL,EAAAA,EAAAA,KAAS,KAAM,CAC/BM,KAAK,EACL,IAAM,EACNC,OAAQL,EAASM,QAAUJ,EAAMI,U,0JCjDrC,MAAMC,EAAc,EAEpB,O,uUC2BA,MAAMC,GAAaP,EAAAA,EAAAA,IAAI,IACjBQ,GAAQR,EAAAA,EAAAA,IAAI,IAGZS,EAAUA,KAEmB,KAA5BF,EAAWF,MAAMK,SAChBF,EAAMH,MAAMM,KAAKJ,EAAWF,OAC5BE,EAAWF,MAAO,GAClBO,IACJ,EAGEC,GAAUb,EAAAA,EAAAA,IAAI,MAGdY,EAAaA,KAEXC,EAAQR,OACRQ,EAAQR,MAAMS,OAClB,EAIEnB,GAAUK,EAAAA,EAAAA,IAAI,WAEpBe,EAAAA,EAAAA,KAAc,KACVC,QAAQC,IAAI,UACZtB,EAAQU,MAAQ,QAAQ,KAI5Ba,EAAAA,EAAAA,KAAU,KACNvB,EAAQU,MAAQ,WAChBW,QAAQC,IAAI,QAAQ,IAIxB,MAAME,GAAcnB,EAAAA,EAAAA,IAAI,IAClBoB,GAAYvB,EAAAA,EAAAA,KAAS,IAClBsB,EAAYd,MAAMgB,MAAM,KAAKC,OAAS,I,wxBCrE/C,MAAMhB,EAAc,EAEpB,O","sources":["webpack://jyTemp01/./src/layout/UserInfoPage.vue","webpack://jyTemp01/./src/layout/UserInfoPage.vue?8f7d","webpack://jyTemp01/./src/view/SubPage01.vue","webpack://jyTemp01/./src/view/SubPage01.vue?6be8"],"sourcesContent":["<template>\r\n\r\n    <div class=\"txt-box\">\r\n        <p>{{ fullMessage }}</p>\r\n        <!-- <button type=\"button\" @click=\"increment\" :class=\"{ active: isActive, 'text-notrue': hasError }\">Button</button> -->\r\n        <a href=\"#none\" @click=\"increment\" :class=\"classObject\"><span>Button</span></a>\r\n        <!-- <button type=\"button\" @click=\"increment\" :class=\"classObject\"><span>Button</span></button> -->\r\n    </div>\r\n\r\n    <!-- 클래스바인딩 (배열) -->\r\n    <!-- <button type=\"button\" @click=\"increment\" :class=\"[activeClass, errorClass]\">Button</button> -->\r\n    <!-- 클래스바인딩 (삼항표현식) -->\r\n    <!-- <button type=\"button\" @click=\"increment\" :class=\"[isActive.value ? activeClass : '', errorClass]\">Button</button> -->\r\n\r\n    <!-- $attrs (Composition API ver) :: 부모 컴포넌트에서 전달된 모든 속성을 포함하는 객체 -->\r\n    <!-- <p :class=\"$attrs.class\">안녀어어엉</p>\r\n    <span>반갑다</span> -->\r\n\r\n\r\n</template>\r\n\r\n<script setup>\r\nimport { reactive, computed, ref } from 'vue';\r\n\r\nconst setItem = reactive({ \r\n    cnt : 0,\r\n    message : 'Hello, Vue'\r\n});\r\n\r\nconst fullMessage = computed(() => `${setItem.message} ${setItem.cnt}`);\r\n\r\nconst increment = () => {\r\n    setItem.cnt++;\r\n}\r\n\r\n// TYPE 01-1 (클래스바인딩)\r\n// const isActive = ref(true);\r\n// const hasError = ref(false);\r\n\r\n// TYPE 01-2 (클래스바인딩) \r\n// const classObject = reactive({\r\n//     btns: true,\r\n//     'text-notrue': false\r\n// })\r\n\r\n// TYPE 01-3 (클래스바인딩)\r\nconst isActive = ref(true);\r\nconst error = ref(null);\r\n\r\nconst classObject = computed(() => ({\r\n    btn: true,\r\n    't2': true,\r\n    active: isActive.value && !error.value,\r\n    //'text-notrue': error.value && error.value.type === 'fatal'\r\n}))\r\n\r\n// TYPE 02-1 (클래스바인딩:배열)\r\n// const activeClass = ref('active')\r\n// const errorClass = ref('text-notrue')\r\n\r\n// TYPE 02-2 (클래스바인딩:삼항표현식 배열)\r\n// const isActive = ref(false);\r\n// const activeClass = 'active';\r\n// const errorClass = 'text-danger';\r\n\r\n\r\n</script>\r\n<!-- <template>\r\n    <p>user : {{ name }}</p>\r\n</template>\r\n\r\n<script setup>\r\nimport { defineProps } from 'vue';\r\n\r\nconst props = defineProps({\r\n    name : String,\r\n});\r\n\r\nconst name = props;\r\n</script> -->\r\n","import script from \"./UserInfoPage.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./UserInfoPage.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n    <div class=\"subpage v1\">\r\n        <user-info-page name=\"Leejiyeon\"></user-info-page>\r\n    \r\n        <div class=\"mount-testbox\">\r\n            <p>컴포넌트가 마운트되기 전의 상태: {{ message }}</p>\r\n        </div>\r\n    \r\n        <div class=\"ref-testbox\">\r\n            <div class=\"inp-item\">\r\n                <input v-model=\"inputValue\" ref=\"myInput\" type=\"text\" placeholder=\"내용을 입력하세요.\" />\r\n                <button @click=\"addItem\">등록</button>\r\n            </div>\r\n            <ul class=\"inp-list\">\r\n                <li v-for=\"(item, index) in items\" :key=\"index\">{{ item }}</li>\r\n            </ul>\r\n        </div>\r\n\r\n        <div class=\"comp-testbox\">\r\n            <div class=\"inp-item\">\r\n                <input v-model=\"onlyMessage\" type=\"text\" placeholder=\"여기 입력하세요\"/>\r\n            </div>\r\n            <p>Count of '시': {{ countText }}</p>\r\n        </div>\r\n\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onBeforeMount, onMounted, computed } from 'vue';\r\nimport UserInfoPage from '@/layout/UserInfoPage';\r\n\r\nconst inputValue = ref('');\r\nconst items = ref([]);      // 입력한 값을 저장할 배열\r\n\r\n// 버튼 클릭 시 호출되는 메서드\r\nconst addItem = () => {\r\n    // 입력 필드의 값이 비어 있지 않은 경우에만 추가\r\n    if(inputValue.value.trim() !== '') {\r\n        items.value.push(inputValue.value);\r\n        inputValue.value= '';\r\n        focusInput();\r\n    }\r\n}\r\n// ref를 사용하여 DOM 요소를 참조할 수 있습니다.\r\nconst myInput = ref(null);\r\n\r\n// 버튼 클릭 시 입력 필드에 포커스를 주는 메서드\r\nconst focusInput = () => { \r\n     // myInput.value는 DOM 요소를 참조합니다.\r\n    if (myInput.value) {\r\n        myInput.value.focus();\r\n    }\r\n};\r\n\r\n// Reactive 데이터 정의\r\nconst message = ref('초기 메시지');\r\n// `onBeforeMount` 훅을 사용하여 마운트 직전의 작업 수행\r\nonBeforeMount(() => {\r\n    console.log('before');\r\n    message.value = '기본 메시지';   // 초기화 작업 또는 API 호출 등을 수행\r\n});\r\n\r\n// `onMounted` 훅을 사용하여 마운트 후의 작업 수행\r\nonMounted(() => {\r\n    message.value = '업데이트 메시지';\r\n    console.log('after');\r\n});\r\n\r\n\r\nconst onlyMessage = ref('')\r\nconst countText = computed(() => {\r\n  return onlyMessage.value.split('다').length - 1\r\n})\r\n\r\n// const dietMenu = ref('');\r\n// const diteText = computed(() => { \r\n//     return dietMenu.value\r\n// });\r\n</script>","import script from \"./SubPage01.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./SubPage01.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["setItem","reactive","cnt","message","fullMessage","computed","increment","isActive","ref","error","classObject","btn","active","value","__exports__","inputValue","items","addItem","trim","push","focusInput","myInput","focus","onBeforeMount","console","log","onMounted","onlyMessage","countText","split","length"],"sourceRoot":""}